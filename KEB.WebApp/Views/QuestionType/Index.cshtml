@model IEnumerable<KEB.Application.DTOs.QuestionTypeDTO.QuestionTypeDisplayDto>
@using KEB.Domain.Enums
@{
    ViewData["Title"] = "Danh sách loại câu hỏi";
    var skills = Enum.GetValues(typeof(Skill)).Cast<Skill>().ToList();
}

<h2 class="mb-4">Danh sách loại câu hỏi</h2>
<div class="mb-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addQuestionTypeModal">
        <i class="bi bi-plus-circle me-1"></i> Thêm loại câu hỏi
    </button>
</div>
<table class="table table-striped table-hover" style="border: 1px solid #dee2e6;">
    <thead class="table-light">
        <tr style="border-bottom: 1px solid #dee2e6;">
            <th style="border-right: none;">#</th>
            <th style="border-right: none;">Tên loại câu hỏi</th>
            <th style="border-right: none;">Mô tả</th>
            <th style="border-right: none;">Kỹ năng</th>
            <th style="border-right: none;">Số lượng câu hỏi</th>
            <th style="border-right: none;">Hoạt động</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="5" class="text-center text-danger">Không có dữ liệu</td>
            </tr>
        }
        else
        {
            int index = 1;
            foreach (var item in Model)
            {
                <tr style="border-bottom: 1px solid #dee2e6;">
                    <td style="border-right: none;">@index</td>
                    <td style="border-right: none;">@item.QuestionTypeName</td>
                    <td style="border-right: none;">@item.QuestionTypeContent</td>
                    <td style="border-right: none;">@item.Skill</td>
                    <td style="border-right: none;">@item.NumOfQuestions</td>
                    <td class="text-center">
                        <button class="btn btn-sm btn-outline-primary edit-questiontype-btn"
                                data-questiontype-id="@item.QuestionTypeId"
                                data-bs-toggle="modal"
                                data-bs-target="#editQuestionTypeModal">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-questiontype-btn"
                                data-questiontype-id="@item.QuestionTypeId"
                                data-questiontype-name="@item.QuestionTypeName"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteQuestionTypeModal">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
                index++;
            }
        }
    </tbody>
</table>

<!-- Modal Thêm loại câu hỏi -->
<div class="modal fade" id="addQuestionTypeModal" tabindex="-1" aria-labelledby="addQuestionTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuestionTypeModalLabel">Thêm loại câu hỏi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form Thêm loại câu hỏi -->
                <form id="addQuestionTypeForm" method="post" action="@Url.Action("Create", "QuestionType")">
                    <div class="mb-3">
                        <label for="questionTypeName" class="form-label">Tên loại câu hỏi <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="questionTypeName" name="QuestionTypeName" required />
                        <div class="invalid-feedback">Vui lòng nhập tên loại câu hỏi</div>
                    </div>
                    <div class="mb-3">
                        <label for="questionTypeContent" class="form-label">Mô tả loại câu hỏi <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="questionTypeContent" name="QuestionTypeContent" rows="3" required></textarea>
                        <div class="invalid-feedback">Vui lòng nhập mô tả cho loại câu hỏi</div>
                    </div>
                    <div class="mb-3">
                        <label for="skill" class="form-label">Kỹ năng <span class="text-danger">*</span></label>
                        <select class="form-control" id="skill" name="Skill" required>
                            <option value="">-- Chọn kỹ năng --</option>
                            @foreach (var diff in skills)
                            {
                                <option value="@((int)diff)">@diff</option>
                            }
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn kỹ năng</div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Thêm</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal Sửa loại câu hỏi -->
<div class="modal fade" id="editQuestionTypeModal" tabindex="-1" aria-labelledby="editQuestionTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editQuestionTypeModalLabel">Chỉnh sửa loại câu hỏi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center" id="editQuestionTypeLoading">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2">Đang tải dữ liệu...</p>
                </div>
                <form id="editQuestionTypeForm" style="display: none;">
                    <input type="hidden" id="editQuestionTypeId" name="QuestionTypeId">
                    <input type="hidden" id="editUpdatedUserId" name="UpdatedUserId" value="@ViewBag.CurrentUserId">
                    <div class="mb-3">
                        <label for="editQuestionTypeName" class="form-label">Tên loại câu hỏi <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editQuestionTypeName" name="QuestionTypeName" required />
                        <div class="invalid-feedback">Vui lòng nhập tên loại câu hỏi</div>
                    </div>
                    <div class="mb-3">
                        <label for="editQuestionTypeContent" class="form-label">Mô tả loại câu hỏi <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="editQuestionTypeContent" name="QuestionTypeContent" rows="3" required></textarea>
                        <div class="invalid-feedback">Vui lòng nhập mô tả cho loại câu hỏi</div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Cập nhật</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal Xóa loại câu hỏi -->
<div class="modal fade" id="deleteQuestionTypeModal" tabindex="-1" aria-labelledby="deleteQuestionTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteQuestionTypeModalLabel">Xác nhận xóa loại câu hỏi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa loại câu hỏi "<span id="deleteQuestionTypeName"></span>"?</p>
                <p class="text-danger">Lưu ý: Thao tác này không thể hoàn tác!</p>
                <form id="deleteQuestionTypeForm">
                    <input type="hidden" id="deleteQuestionTypeId" name="QuestionTypeId">
                    <input type="hidden" id="deleteCreatedBy" name="CreatedBy" value="@ViewBag.CurrentUserId">
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-danger">Xác nhận xóa</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
       
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy form element
            const form = document.getElementById('addQuestionTypeForm');

            // Xử lý sự kiện submit form
            form.addEventListener('submit', function (event) {
                // Kiểm tra form có hợp lệ không
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();

                    // Hiển thị các thông báo lỗi
                    Array.from(form.elements).forEach(input => {
                        if (input.nodeName !== 'BUTTON' && !input.checkValidity()) {
                            input.classList.add('is-invalid');
                        }
                    });
                } else {
                    // Ẩn modal khi submit thành công
                    // Bootstrap sẽ tự động submit form và chuyển trang
                }

                form.classList.add('was-validated');
            });

            // Reset form khi modal được đóng
            const modal = document.getElementById('addQuestionTypeModal');
            modal.addEventListener('hidden.bs.modal', function () {
                form.reset();
                form.classList.remove('was-validated');
                Array.from(form.elements).forEach(input => {
                    input.classList.remove('is-invalid');
                });
            });

            // Xử lý sự kiện input để xóa lỗi khi user điền thông tin
            Array.from(form.elements).forEach(input => {
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                    }
                });
            });
             // Xử lý nút sửa
            $('.edit-questiontype-btn').on('click', function() {
                const questionTypeId = $(this).data('questiontype-id');
                openEditModal(questionTypeId);
            });
            // Xử lý form sửa
            $('#editQuestionTypeForm').on('submit', function(e) {
                e.preventDefault();
                const questionTypeId = $('#editQuestionTypeId').val();
                const updatedUserId = $('#editUpdatedUserId').val();
                const questionTypeName = $('#editQuestionTypeName').val();
                const questionTypeContent = $('#editQuestionTypeContent').val();

                if (!questionTypeId || !updatedUserId || !questionTypeName || !questionTypeContent) {
                    alert('Vui lòng nhập đầy đủ thông tin.');
                    return;
                }

                const requestData = {
                    QuestionTypeId: questionTypeId,
                    UpdatedUserId: updatedUserId,
                    QuestionTypeName: questionTypeName,
                    QuestionTypeContent: questionTypeContent
                };

                $.ajax({
                    url: 'https://localhost:7101/api/QuestionTypes/edit-questiontype',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function(res) {
                        if (res.isSuccess) {
                            alert(res.message || 'Cập nhật loại câu hỏi thành công!');
                            $('#editQuestionTypeModal').modal('hide');
                            location.reload();
                        } else {
                            alert(res.message || 'Lỗi khi cập nhật loại câu hỏi.');
                        }
                    },
                    error: function(xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Lỗi khi cập nhật loại câu hỏi.';
                        alert(errorMessage);
                    }
                });
            });
            // Xử lý nút xóa
            $('.delete-questiontype-btn').on('click', function() {
                const questionTypeId = $(this).data('questiontype-id');
                const questionTypeName = $(this).data('questiontype-name');
                $('#deleteQuestionTypeId').val(questionTypeId);
                $('#deleteQuestionTypeName').text(questionTypeName);
            });
            // Xử lý form xóa
            $('#deleteQuestionTypeForm').on('submit', function(e) {
                e.preventDefault();
                const questionTypeId = $('#deleteQuestionTypeId').val();
                const createdBy = $('#deleteCreatedBy').val();

                if (!questionTypeId || !createdBy) {
                    alert('Dữ liệu không hợp lệ.');
                    return;
                }

                const requestData = {
                    QuestionTypeId: questionTypeId,
                    CreatedBy: createdBy
                };

                $.ajax({
                    url: 'https://localhost:7101/api/QuestionTypes/delete-questiontype',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function(res) {
                        if (res.isSuccess) {
                            alert(res.message || 'Xóa loại câu hỏi thành công!');
                            $('#deleteQuestionTypeModal').modal('hide');
                            location.reload();
                        } else {
                            alert(res.message || 'Lỗi khi xóa loại câu hỏi.');
                        }
                    },
                    error: function(xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Lỗi khi xóa loại câu hỏi.';
                        alert(errorMessage);
                    }
                });
            });
        });
        function openEditModal(questionTypeId) {
            $('#editQuestionTypeModal').modal('show');
            $('#editQuestionTypeLoading').show();
            $('#editQuestionTypeForm').hide();

            $.ajax({
                url: `https://localhost:7101/api/QuestionTypes/get-questiontype-${questionTypeId}`,
                type: 'GET',
                success: function(res) {
                    if (res.isSuccess && res.result && res.result.length > 0) {
                        const questionType = res.result[0];
                        $('#editQuestionTypeId').val(questionType.questionTypeId);
                        $('#editQuestionTypeName').val(questionType.questionTypeName);
                        $('#editQuestionTypeContent').val(questionType.questionTypeContent);
                        $('#editQuestionTypeLoading').hide();
                        $('#editQuestionTypeForm').show();
                    } else {
                        alert(res.message || 'Không tìm thấy loại câu hỏi.');
                        $('#editQuestionTypeModal').modal('hide');
                    }
                },
                error: function(xhr) {
                    const errorMessage = xhr.responseJSON?.message || 'Lỗi khi tải dữ liệu loại câu hỏi.';
                    alert(errorMessage);
                    $('#editQuestionTypeModal').modal('hide');
                }
            });
        }
    </script>
}