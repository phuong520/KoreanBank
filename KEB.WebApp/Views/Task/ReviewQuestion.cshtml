@model IEnumerable<KEB.Application.DTOs.QuestionDTO.QuestionDisplayDto>
@using KEB.Domain.Enums
@using System.ComponentModel
@{
    var status = Enum.GetValues(typeof(QuestionStatus)).Cast<QuestionStatus>().ToList();
    int i = 1;

    // Lấy trạng thái hiện tại từ ViewBag hoặc mặc định là Pending
    // var currentStatus = ViewBag.CurrentStatus != null ? ViewBag.CurrentStatus : QuestionStatus.Pending;
    var currentStatus = QuestionStatus.Pending;
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Duyệt câu hỏi</title>
    <link rel="stylesheet" href="~/css/ReviewQuestion.css" />
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Duyệt câu hỏi</h1>
        </div>

        <div class="tabs">
            @foreach (var item in status)
            {
                var isActive = item.Equals(currentStatus) ? "active" : "";
                var description = item.GetType().GetMember(item.ToString())
                .FirstOrDefault()?
                .GetCustomAttributes(typeof(DescriptionAttribute), false)
                .Cast<DescriptionAttribute>()
                .FirstOrDefault()?.Description ?? item.ToString();

                <div class="tab @isActive" data-status="@((int)item)">@description</div>
            }
        </div>

        <form id="reviewForm" method="post" asp-action="ReviewQuestion">
            @Html.AntiForgeryToken()
            <input type="hidden" id="questionId" name="Requests[0].QuestionId" />
            <input type="hidden" id="toStatus" name="Requests[0].ToStatus" />
            <input type="hidden" id="reason" name="Requests[0].Reason" />
            <input type="hidden" id="notifyTo" name="NotifyTo" />
            <input type="hidden" id="logId" name="LogId" />
        </form>

        <div class="table-header">
            <div class="stt">STT</div>
            <div>Câu Hỏi</div>
            <div>Đáp án</div>
            <div>Đánh Giá</div>
            <div>Nhận xét</div>
        </div>

        <div class="question-content">
            @if (Model != null && Model.Any())
            {
                foreach (var question in Model)
                {
                    <div class="question-item" data-question-id="@question.Id" data-created-by="@question.NotifyTo" data-log-id="@question.LogId">
                        <div class="stt">@i</div>
                        @{
                            i++;
                        }
                        <div class="question-text">
                            <div>@question.QuestionContent</div>
                        </div>
                        <div class="answers">
                            @if (question.Answers != null && question.Answers.Any())
                            {
                                int index = 0;
                                foreach (var answer in question.Answers)
                                {
                                    var label = ((char)('A' + index)).ToString();
                                    <div class="mb-1">
                                        <strong>@label.</strong> @answer.Content
                                        @if (answer.IsCorrect)
                                        {
                                            <span style="color: #28a745; font-weight: bold;"> ✓</span>
                                        }
                                    </div>
                                    index++;
                                }
                            }
                            else
                            {
                                <p style="color: #dc3545;">Không có đáp án nào.</p>
                            }
                        </div>
                        <div class="actions">
                            @if (currentStatus == QuestionStatus.Pending)
                            {
                                <button type="button" class="btn btn-accept" onclick="reviewQuestion('@question.Id', 4, '@question.NotifyTo', '@question.LogId')">
                                    ✓ Chấp nhận
                                </button>
                                <button type="button" class="btn btn-reject" onclick="reviewQuestion('@question.Id', 3, '@question.NotifyTo', '@question.LogId')">
                                    ✗ Từ chối
                                </button>
                            }
                            else
                            {
                                <span>@currentStatus.ToString()</span>
                            }
                        </div>
                        <div class="comment">
                            <input type="text" class="input-field reason-input" data-id="@question.Id" placeholder="Nhận xét..." @(currentStatus != QuestionStatus.Pending ? "disabled" : "") />
                        </div>
                    </div>
                }
            }
            else
            {
                <div style="text-align:center; padding: 20px;">
                    <p>Không có câu hỏi nào ở trạng thái này.</p>
                </div>
            }
        </div>
    </div>

    <div id="notification" class="notification"></div>

    <script>
        // Chuyển tab theo trạng thái câu hỏi
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', () => {
                const status = tab.dataset.status;
                window.location.href = `/Task/ReviewQuestion?status=${status}`;
            });
        });

        // Hiển thị thông báo
        function showNotification(message, type) {
            const notify = document.getElementById('notification');
            notify.innerText = message;
            notify.className = `notification ${type}`;
            notify.style.display = 'block';
            setTimeout(() => {
                notify.style.display = 'none';
            }, 3000);
        }

        // Gửi form duyệt câu hỏi
        function reviewQuestion(questionId, toStatus, createdBy, logId) {
            const reasonInput = document.querySelector(`.reason-input[data-id="${questionId}"]`);
            const reason = reasonInput ? reasonInput.value : "";

            if (toStatus == 3 && reason.trim() === "") {
                showNotification("Vui lòng nhập lý do từ chối", "error");
                return;
            }
              console.log(questionId, toStatus, reason, createdBy, logId);

                document.getElementById('questionId').value = questionId;
                document.getElementById('toStatus').value = toStatus;
                document.getElementById('reason').value = reason;
                document.getElementById('notifyTo').value = createdBy;
                document.getElementById('logId').value = logId;
                console.log(document.getElementById('notifyTo').value);

            document.getElementById("reviewForm").submit();
        }
    </script>
</body>
</html>