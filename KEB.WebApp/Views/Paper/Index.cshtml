@model List<KEB.Application.DTOs.ExamPaperDTO.PaperGeneralDisplayDTO>
@using KEB.Domain.Enums

@{
    ViewBag.Title = "Ngân hàng đề thi";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var difficulties = Enum.GetValues(typeof(Difficulty)).Cast<Difficulty>().ToList();
    var skills = Enum.GetValues(typeof(Skill)).Cast<Skill>().ToList();
    int i = 1;

    // Mặc định hiển thị tab "Nghe"
    string currentSkill = "Nghe";

    // Nếu có query parameter "skill" thì cập nhật currentSkill
    if (Context.Request.Query.ContainsKey("skill"))
    {
        currentSkill = Context.Request.Query["skill"].ToString();
    }

    // Lọc danh sách giấy tờ theo kỹ năng hiện tại
    var displayPapers = Model;

    // Chuyển đổi giá trị skill từ tiếng Việt sang tiếng Anh cho việc so sánh
    string skillForFiltering = currentSkill;
    switch (currentSkill)
    {
        case "Nghe": skillForFiltering = "Nghe"; break;
        case "Nói": skillForFiltering = "Nói"; break;
        case "Đọc": skillForFiltering = "Đọc"; break;
        case "Viết": skillForFiltering = "Viết"; break;
    }

    // Lọc danh sách giấy tờ theo kỹ năng được chọn
    displayPapers = Model.Where(p => p.Skill == skillForFiltering).ToList();
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ngân Hàng Đề Thi</title>
     <link rel="stylesheet" href="~/css/PaperIndex.css" />
</head>
<body>
    <div class="header">
        <div class="header-title">Ngân Hàng Đề Thi</div>
        <div class="header-actions">
            <div class="header-icon">
                <i class="fa fa-info-circle"></i>
            </div>
            <div class="header-icon">
                <i class="fa fa-globe"></i>
            </div>
            <div class="header-icon">
                <i class="fa fa-bell"></i>
            </div>
        </div>
    </div>

    <div class="search-container">
        <input type="text" class="search-input" placeholder="Tìm kiếm">
        <button class="add-new-btn" id="addNewBtn">
            <i class="fa fa-plus"></i> Thêm mới
        </button>
    </div>

    <div class="tab-container">
        <a href="?skill=Nghe" class="tab @(currentSkill == "Nghe" ? "active" : "")">Nghe</a>
        <a href="?skill=Nói" class="tab @(currentSkill == "Nói" ? "active" : "")">Nói</a>
        <a href="?skill=Đọc" class="tab @(currentSkill == "Đọc" ? "active" : "")">Đọc</a>
        <a href="?skill=Viết" class="tab @(currentSkill == "Viết" ? "active" : "")">Viết</a>
    </div>

    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th style="width: 30px;">STT</th>

                    <th>Kỳ Thi</th>
                    <th>Trình độ</th>
                    <th>Tiêu đề bài thi </th>
                    <th>Ngày Thi</th>
                    <th>Tình Trạng</th>
                    <th>Hoạt động</th>
                </tr>
            </thead>
            <tbody>
                @if (displayPapers.Any())
                {
                    i = 1;
                    foreach (var paper in displayPapers)
                    {
                        <tr>
                            <td>@i</td>
                            
                            <td>@paper.ExamName</td>
                            <td>@paper.LevelName</td>
                            <td>@paper.PaperName</td>
                            <td>@paper.TakePlaceTime</td>
                            <td><span class="exam-status status-completed">@paper.PaperStatus</span></td>
                            <td>
                            <td>
                                <form asp-action="Detail" asp-controller="Paper" method="get" style="display: inline-block;">
                                    <input type="hidden" name="paperId" value="@paper.PaperId" />
                                    <button type="submit" class="btn btn-sm btn-primary">👁️</button>
                                </form>
                                <button class="download-btn">⬇️</button>
                            </td>
                        </tr>
                        i++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="no-data">Không có dữ liệu cho kỹ năng này</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int p = 1; p <= (int)ViewBag.TotalPages; p++)
            {
                <li class="page-item @(p ==  (int)ViewBag.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = p, size = ViewBag.Size })">@p</a>
                </li>
            }
        </ul>
    </nav>

    <!-- Modal Popup để thêm đề thi mới -->
    <div id="addExamModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Thêm Đề Thi Mới</h3>
                <button class="close-btn" id="closeModal">&times;</button>
            </div>
            <form id="addExamForm" method="post" action="/Paper/Create">
                <div class="form-group">
                    <label class="form-label" for="examType">Loại Kỳ Thi:</label>
                    <select name="examId" id="examType" class="form-control" asp-items="ViewBag.Exams">
                        <option value="">-- Chọn loại kỳ thi --</option>
                    </select>
                </div>
                <input type="hidden" name="skill" value="@currentSkill" />
                <div class="form-actions">
                    <button type="button" class="btn-cancel" id="cancelAdd">Hủy</button>
                    <button type="submit" class="btn-submit">Lưu</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // JavaScript để điều khiển modal popup
        document.addEventListener('DOMContentLoaded', function() {
            const addNewBtn = document.getElementById('addNewBtn');
            const modal = document.getElementById('addExamModal');
            const closeBtn = document.getElementById('closeModal');
            const cancelBtn = document.getElementById('cancelAdd');

            // Mở modal khi nhấn nút "Thêm mới"
            addNewBtn.addEventListener('click', function() {
                modal.style.display = 'flex';
            });

            // Đóng modal khi nhấn nút đóng
            closeBtn.addEventListener('click', function() {
                modal.style.display = 'none';
            });

            // Đóng modal khi nhấn nút hủy
            cancelBtn.addEventListener('click', function() {
                modal.style.display = 'none';
            });

            // Đóng modal khi nhấn bên ngoài modal
            window.addEventListener('click', function(event) {
                if (event.target == modal) {
                    modal.style.display = 'none';
                }
            });

            // Thêm tìm kiếm
            const searchInput = document.querySelector('.search-input');
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const tableRows = document.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const text = row.textContent.toLowerCase();
                    if (text.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>
</body>
</html>