@model List<KEB.Application.DTOs.ReferenceDTO.ReferenceDisplayDto>

@{
    ViewData["Title"] = "Reference List";
}

<div class="container-fluid mt-3">
    <h2 style="text-align: center;">Tài liệu tham khảo</h2>
    <div class="d-flex justify-content-between mb-3">
        <div class="search-box">
            <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm" style="border-radius: 20px; background-color: #e9ecef; width: 170px;">
        </div>
        <a href="@Url.Action("Create", "References")" class="btn btn-primary">Tạo Mới</a>
    </div>

    <div class="table-responsive">
        <table class="table" style="border: 1px solid #dee2e6;">
            <thead>
                <tr style="border-bottom: 1px solid #dee2e6;">
                    <th style="border-right: none; text-align: center; width: 5%;">STT</th>
                    <th style="border-right: none; width: 30%;">Tài Liệu</th>
                    <th style="border-right: none; width: 15%;">Năm Xuất Bản</th>
                    <th style="border-right: none; width: 30%;">Chủ Thích</th>
                    <th style="border-right: none; text-align: center; width: 10%;">Số Câu Hỏi</th>
                    <th style="border-right: none; text-align: center; width: 10%;">Hoạt động</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    int index = 1;
                    foreach (var reference in Model)
                    {
                        <tr style="border-bottom: 1px solid #dee2e6;">
                            <td style="border-right: none; text-align: center;">@index</td>
                            <td style="border-right: none;">@reference.ReferenceName</td>
                            <td style="border-right: none;">@reference.PublishedYear</td>
                            <td style="border-right: none;">@reference.Description</td>
                            <td style="border-right: none; text-align: center;">@reference.NumOfQuestions</td>
                             <td class="text-center">
                                <a href="@Url.Action("Edit", "References", new { id = reference.Id })" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-reference-btn"
                                        data-reference-id="@reference.Id"
                                        data-reference-name="@reference.ReferenceName"
                                        data-bs-toggle="modal"
                                        data-bs-target="#deleteReferenceModal">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="alert-container" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int p = 1; p <= (int)ViewBag.TotalPages; p++)
            {
                <li class="page-item @(p ==  (int)ViewBag.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = p, size = ViewBag.Size })">@p</a>
                </li>

            }
        </ul>
    </nav>
</div>
<!-- Modal Xóa Tài Liệu -->
<div class="modal fade" id="deleteReferenceModal" tabindex="-1" aria-labelledby="deleteReferenceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteReferenceModalLabel">Xác nhận xóa tài liệu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa tài liệu "<span id="deleteReferenceName"></span>"?</p>
                <p class="text-danger">Lưu ý: Thao tác này không thể hoàn tác!</p>
                <form id="deleteReferenceForm">
                    <input type="hidden" id="deleteReferenceId" name="TargetObjectId">
                    <input type="hidden" id="deleteRequestedUserId" name="RequestedUserId" value="@ViewBag.CurrentUserId">
                    <input type="hidden" name="HardDelete" value="true">
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-danger">Xác nhận xóa</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function() {
            // Xử lý tìm kiếm
            $("#searchInput").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $("table tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
                //show message
                        function showSuccessMessage(message) {
                showAlert(message, 'success');
            }

            function showErrorMessage(message) {
                showAlert(message, 'danger');
            }

            function showAlert(message, type) {
                const alertId = 'alert-' + Date.now();
                const alertHtml = `
                    <div id="${alertId}" class="alert alert-${type} alert-dismissible fade show" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>`;
                $('#alert-container').append(alertHtml);

                // Tự động đóng sau 5 giây
                setTimeout(() => {
                    $('#' + alertId).alert('close');
                }, 5000);
            }
             // Xử lý khi nhấn nút xóa
            $(document).on("click", ".delete-reference-btn", function() {
                let referenceId = $(this).data("reference-id");
                let referenceName = $(this).data("reference-name");
                $("#deleteReferenceId").val(referenceId);
                $("#deleteReferenceName").text(referenceName);
            });
            // Xử lý khi nhấn nút xóa
            $(document).on("click", ".delete-reference-btn", function() {
                let referenceId = $(this).data("reference-id");
                let referenceName = $(this).data("reference-name");
                $("#deleteReferenceId").val(referenceId);
                $("#deleteReferenceName").text(referenceName);
            });

                   $("#deleteReferenceForm").on("submit", function(e) {
            e.preventDefault();

            let referenceId = $("#deleteReferenceId").val();
            let requestedUserId = $("#deleteRequestedUserId").val();
            let submitBtn = $(this).find("button[type='submit']");
            let originalBtnText = submitBtn.text();

            if (!referenceId || !requestedUserId) {
                alert("Dữ liệu không hợp lệ.");
                return;
            }

            // Disable nút submit
            submitBtn.prop("disabled", true).text("Đang xóa...");

            let requestData = {
                TargetObjectId: referenceId,
                RequestedUserId: requestedUserId,
                HardDelete: true
            };

            $.ajax({
                url: 'https://localhost:7101/api/References/delete-reference',
                type: "DELETE",
                contentType: "application/json",
                data: JSON.stringify(requestData),
                success: function(res) {
                    if (res && res.isSuccess) {
                        if (typeof showSuccessMessage === "function") {
                            showSuccessMessage(res.message || "Xóa tài liệu thành công!");
                        } else {
                            alert("Xóa tài liệu thành công!");
                        }
                        $("#deleteReferenceModal").modal("hide");
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        if (typeof showErrorMessage === "function") {
                            showErrorMessage(res?.message || "Không thể xóa tài liệu.");
                        } else {
                            alert("Không thể xóa tài liệu.");
                        }
                    }
                },
                error: function(xhr) {
                    let errorMsg = "Lỗi khi xóa tài liệu.";
                    switch (xhr.status) {
                        case 0:
                            errorMsg = "Không thể kết nối tới server.";
                            break;
                        case 400:
                            errorMsg = "Yêu cầu không hợp lệ.";
                            break;
                        case 401:
                            errorMsg = "Bạn chưa đăng nhập.";
                            break;
                        case 403:
                            errorMsg = "Bạn không có quyền thực hiện thao tác này.";
                            break;
                        case 404:
                            errorMsg = "Không tìm thấy tài liệu.";
                            break;
                        case 500:
                            errorMsg = "Lỗi server. Vui lòng thử lại sau.";
                            break;
                    }

                    if (typeof showErrorMessage === "function") {
                        showErrorMessage(errorMsg);
                    } else {
                        alert(errorMsg);
                    }

                    console.error("Chi tiết lỗi:", xhr);
                },
                complete: function() {
                    submitBtn.prop("disabled", false).text(originalBtnText);
                }
            });
        });
    });
    </script>
}